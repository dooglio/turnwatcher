#!/bin/bash
#
# File:		dev/build-debian
# Object:	Build the debian packages
#
# Copyright:	Copyright (c) 2006-2008 Made to Order Software Corp.
#
#		All Rights Reserved.
#
#		This software and its associated documentation contains
#		proprietary, confidential and trade secret information
#		of Made to Order Software Corp. and except as provided by
#		written agreement with Made to Order Software Corp.
#
#		a) no part may be disclosed, distributed, reproduced,
#		   transmitted, transcribed, stored in a retrieval system,
#		   adapted or translated in any form or by any means
#		   electronic, mechanical, magnetic, optical, chemical,
#		   manual or otherwise,
#
#		and
#
#		b) the recipient is not entitled to discover through reverse
#		   engineering or reverse compiling or other such techniques
#		   or processes the trade secrets contained therein or in the
#		   documentation.
#
# Log:
# Oct 22, 2006
# Updated so only the debian package is created
# Switch from CVS to SVN with additional tests for the existance of the
# destination directory to make sure we can put the packages there.
#
# Revision 1.6  2006/09/22 07:43:54  alexis
# Added code to move the tar & rpm packages to the packages directory
# and automatically & properly check the results in our CVS
#
# Revision 1.5  2006/09/22 07:24:16  alexis
# Setup variables with the package names
# Added some data support so at the end I can display the start date too
#
# Revision 1.4  2006/09/08 07:15:15  alexis
# Fixed a few things and comment out the autoreconf which was moved to
# build-autoreconf
#
# Revision 1.3  2006/08/28 05:08:14  alexis
# Asked the user whether he wants to overwrite an existing package!
#
# Revision 1.2  2006/08/28 04:19:53  alexis
# Many additions to be closer to what this script is supposed to be.
# Still need to be properly debugged...
#
# Revision 1.1  2006/08/21 01:08:15  alexis
# Script used to automate 100% the building of a debian package
#
#
#
#
#


#
# Use this script to build the Linux packages (and everything
# which the packages needs, of course!).
#

# This script cannot be used by itself, there is too much going on in
# the main script (dev/build)

if test -z "$BUILD_VERSION" -o -z "$BUILD_VERSION_STRING" -o -z "$VERSION"
then
	echo "turnwatcher: error: some environment variables defined by the dev/build script"
	echo "turnwatcher: error: are not defined; $0 cannot be used directly."
	exit 1;
fi

# Export variables used in the rules makefile
export DEMO_NAME
export EXTRA_CONFIGURATION_OPTIONS

# The output folder
BUILD_DEBIAN=debian

# The output filename
ARCH=`uname -m`
case "$ARCH" in
i386|i686)
	ARCH=i386
	;;
x86_64)
	ARCH=amd64
	;;
*)
	echo "turnwatcher:error: unsupported architecture."
	exit 1
	;;
esac
OUTPUT=turnwatcher${DEMO_NAME}_${FULL_VERSION}_${ARCH}.deb

rm -f $BUILD_DEBIAN/control
ln -s control.$ARCH $BUILD_DEBIAN/control


##
## Show the user the full version!
##
echo "turnwatcher: building Turn Watcher version $FULL_VERSION"
echo "turnwatcher: for Debian arch in debian/build${DEMO_NAME}"
echo "turnwatcher: output file: \"$PACKAGES_DIR/$OUTPUT\""


if test -f $PACKAGES_DIR/$OUTPUT
then
	echo "***"
	echo "turnwatcher: warning: package already exist for this version!"
	echo "turnwatcher: warning:   $PACKAGES_DIR/$OUTPUT"
	echo "***"
	echo -n "turnwatcher: warning: do you want to overwrite it? [y/N] "
	read answer
	if test "$answer" != "y" -a "$answer" != "Y"
	then
		echo "turnwatcher: error: build abort."
		exit 1;
	fi
fi

start_date=`date`
echo "turnwatcher: start date: $start_date"

echo "New Debian build started on $start_date" >$TMPDIR/build-debian.txt 2>&1





##
## Ensure that the package is really 100% up to date by:
##	1) re-running autoreconf
##	2) cleaning up the debian sub-directories
##	3) rebuilding everything
##

## I moved the autoreconf to dev/build-autoreconf and call it once
## from dev/build
##
# We will need to have the configure scripts ready for Win32
# Make sure we have those built
## if $VERBOSE
## then
## 	autoreconf -f -i -v
## else
## 	autoreconf -f -i
## fi

# Delete any "old" version so we know for sure that we really got a new version
rm -f $BUILD_DEBIAN/$OUTPUT
rm -f build-arch-stamp configure-stamp



# Cleanup since when we build with this script we want to make really sure
# we got the right everything! (which is why you may want to avoid using this
# script when testing!)
fakeroot debian/rules clean

	# TBD: should we put all the output in build-debian.txt

# This builds everything, create the .deb files and put them one
# directory up.
if $LEGACY_UI
then
	export EXTRA_CONFIGURE_OPTIONS="$EXTRA_CONFIGURE_OPTIONS --enable-legacyui"
fi
fakeroot debian/rules binary


# Check whether it worked
if ! test -f $BUILD_DEBIAN/$OUTPUT
then
	echo
	echo "turnwatcher: error: the debian package was not rebuilt."
	echo "turnwatcher: error: look for why this happened and then try again."
	echo
	exit 1
fi


# If the person does not have the packages checked out it won't work
# correctly
if ! test -d $PACKAGES_DIR/.svn
then
	echo "turnwatcher: warning: it looks as if you did not have packages checked out."
	echo "turnwatcher: warning: this script cannot check in the new one until you do:"
	echo "turnwatcher: warning:    svn update packages/turnwatcher"
	# NOTE: this is wrong when in a sub-folder branch stuff as created by Doug...
	echo "turnwatcher: warning: under your 'sources' directory (`cd ../../../ && pwd`)."
	echo "turnwatcher: warning: the new package can be found in ${BUILD_DEBIAN}."
else
	# Put the result in the proper packages directory
	# since it all worked
	mv -f $BUILD_DEBIAN/$OUTPUT $PACKAGES_DIR/$OUTPUT



	# If it is not the first time, the add will fail, but with -Q nothing is printed
	if $CHECKIN_PACKAGES
	then
		echo "turnwatcher: info: checking-in the resulting debian package..."
		(
			svn --quiet add $PACKAGES_DIR/$OUTPUT
			svn commit --non-interactive -N \
					-m "Turn Watcher Debian -- automatic build on `date`" \
					$PACKAGES_DIR/$OUTPUT
		) >>$TMPDIR/build-debian.txt 2>&1
	fi
fi



(
	echo
	echo "Lastest Debian build ended on `date` (started on: $start_date)"
	echo
) >>$TMPDIR/build-debian.txt 2>&1

echo "turnwatcher: end date: `date` (started on: $start_date)"
echo
echo "turnwatcher: build Debian finished."
echo



# vim: ts=8
